{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/react/redux-app/src/components/TodoList/TodoList.js\";\nimport tick from '../../img/green-tick.png';\nimport close from \"../../img/close.svg\";\nimport './TodoList.css';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.complete ? 'completed' : 'uncompleted',\n      style: {\n        wordBreak: 'break-word',\n        width: '280px',\n        textAlign: 'start',\n        fontFamily: 'Courier, serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => props.handleTodo(props.id),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list__todoBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.handleSolve(props.id, props.label),\n        id: props.complete ? 'unhidden' : 'hidden',\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todoBlock__solve\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tick,\n            width: \"30px\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.handleClose(props.id),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todoBlock__close\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}; // const TodoList = () => {\n//     const dispatch = useDispatch();\n//\n//     const todos = useSelector(state => state.todos);\n//     const handleClick = (id) => dispatch({\n//         type: 'REMOVE_TODO',\n//         payload: id\n//     })\n//     if(!todos || !todos.length){\n//         return <p>NO TODOS</p>\n//     }\n//\n//     return(\n//         <ul>\n//             {todos.map(todo => <li onClick={() => handleClick(todo.id)}>{todo.label}</li>)}\n//         </ul>\n//     )\n// }\n\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/macuser/Documents/react/redux-app/src/components/TodoList/TodoList.js"],"names":["tick","useSelector","TodoList","props","complete","wordBreak","width","textAlign","fontFamily","handleTodo","id","cursor","label","handleSolve","handleClose","close"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;AAEA,OAAO,gBAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAGxB,sBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEA,KAAK,CAACC,QAAN,GAAiB,WAAjB,GAA+B,aAA/C;AACK,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,YADR;AAEHC,QAAAA,KAAK,EAAE,OAFJ;AAGHC,QAAAA,SAAS,EAAE,OAHR;AAIHC,QAAAA,UAAU,EAAE;AAJT,OADZ;AAAA,6BAQI;AAAM,QAAA,OAAO,EAAE,MAAML,KAAK,CAACM,UAAN,CAAiBN,KAAK,CAACO,EAAvB,CAArB;AAAkD,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAzD;AAAA,kBAAgFR,KAAK,CAACS;AAAtF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BAEI;AAAK,QAAA,OAAO,EAAE,MAAMT,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACO,EAAxB,EAA4BP,KAAK,CAACS,KAAlC,CAApB;AAA8D,QAAA,EAAE,EAAET,KAAK,CAACC,QAAN,GAAiB,UAAjB,GAA8B,QAAhG;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEJ,IAAV;AAAgB,YAAA,KAAK,EAAE,MAAvB;AAA+B,YAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,OAAO,EAAE,MAAMG,KAAK,CAACW,WAAN,CAAkBX,KAAK,CAACO,EAAxB,CAApB;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEK,KAAV;AAAiB,YAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAjCD,C,CAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArDMb,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import tick from '../../img/green-tick.png'\nimport close from '../../img/close.svg'\nimport './TodoList.css'\nimport {useSelector} from \"react-redux\";\n\nconst TodoList = (props) => {\n   \n\n    return (\n        <div  className=\"task-list__block\">\n            <div className={props.complete ? 'completed' : 'uncompleted'}\n                 style={{\n                     wordBreak: 'break-word',\n                     width: '280px',\n                     textAlign: 'start',\n                     fontFamily: 'Courier, serif',\n\n                 }}>\n                <span onClick={() => props.handleTodo(props.id)}  style={{cursor: \"pointer\"}}>{ props.label}</span>\n            </div>\n\n            <div className=\"task-list__todoBlock\">\n\n                <div onClick={() => props.handleSolve(props.id, props.label)} id={props.complete ? 'unhidden' : 'hidden'}>\n                    <button className=\"todoBlock__solve\">\n                        <img src={tick} width={\"30px\"} alt=\"\"/>\n                    </button>\n                </div>\n\n                <div onClick={() => props.handleClose(props.id)}>\n                    <button className=\"todoBlock__close\">\n                        <img src={close} alt=\"\"/>\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n\n// const TodoList = () => {\n//     const dispatch = useDispatch();\n//\n//     const todos = useSelector(state => state.todos);\n//     const handleClick = (id) => dispatch({\n//         type: 'REMOVE_TODO',\n//         payload: id\n//     })\n//     if(!todos || !todos.length){\n//         return <p>NO TODOS</p>\n//     }\n//\n//     return(\n//         <ul>\n//             {todos.map(todo => <li onClick={() => handleClick(todo.id)}>{todo.label}</li>)}\n//         </ul>\n//     )\n// }\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}