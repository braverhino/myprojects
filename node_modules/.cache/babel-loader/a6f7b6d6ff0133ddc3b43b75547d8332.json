{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/react/redux-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state = [], action) => {\n  if (action.type === 'ADD_TODO') {\n    return [...state, action.todo];\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this), \", document.getElementById('root')\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 5\n}, this));\nreportWebVitals();","map":{"version":3,"sources":["/Users/macuser/Documents/react/redux-app/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","Provider","reducer","state","action","type","todo","store","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO,CACH,GAAGF,KADA,EACOC,MAAM,CAACE,IADd,CAAP;AAGH;;AACD,SAAOH,KAAP;AACH,CAPD;;AASA,MAAMI,KAAK,GAAGP,WAAW,CAACE,OAAD,CAAzB;AAGAL,QAAQ,CAACW,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,0BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQAR,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\n\nconst reducer = (state = [], action) => {\n    if (action.type === 'ADD_TODO') {\n        return [\n            ...state, action.todo\n        ]\n    }\n    return state\n}\n\nconst store = createStore(reducer)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>,\n        document.getElementById('root')\n    </Provider>\n);\n\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}