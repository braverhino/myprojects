{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/react/redux-app/src/App.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  console.log(props.textStore);\n\n  const addTrack = () => {\n    console.log(\"Track was added:\", trackInput.value);\n  };\n\n  const trackInput = \"f\";\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: input => {\n        trackInput = input;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTrack,\n      children: \"add track\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.textStore.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", track, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default connect(state => ({\n  textStore: state\n}), dispatch => ({}))(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macuser/Documents/react/redux-app/src/App.js"],"names":["Component","connect","App","props","console","log","textStore","addTrack","trackInput","value","input","map","track","index","state","dispatch"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,UAAU,CAACC,KAA3C;AACH,GAFD;;AAGA,QAAMD,UAAU,GAAG,GAAnB;AACJ;AACE,sBACE;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAGE,KAAD,IAAW;AAACF,QAAAA,UAAU,GAAGE,KAAb;AAAmB;AAAvD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK;AAAQ,MAAA,OAAO,EAAEH,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAGI;AAAA,gBAEQJ,KAAK,CAACG,SAAN,CAAgBK,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,kBAChB;AAAA,wBAAkBD,KAAlB;AAAA,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KApBQX,G;AAsBT,eAAeD,OAAO,CAClBa,KAAK,KAAK;AACRR,EAAAA,SAAS,EAAEQ;AADH,CAAL,CADa,EAIlBC,QAAQ,KAAK,EAAL,CAJU,CAAP,CAKbb,GALa,CAAf","sourcesContent":["import {Component} from \"react\";\nimport {connect} from \"react-redux\";\nfunction App(props) {\n    console.log(props.textStore)\n    const addTrack = () => {\n        console.log(\"Track was added:\", trackInput.value)\n    }\n    const trackInput = \"f\"\ndebugger\n  return (\n    <div>\n        <input type=\"text\" ref={(input) => {trackInput = input}}/>\n         <button onClick={addTrack}>add track</button>\n        <ul>\n            {\n                props.textStore.map((track, index) =>\n                    <li key={index}> {track} </li>\n                )\n            }\n        </ul>\n    </div>\n  );\n}\n\nexport default connect(\n    state => ({\n      textStore: state,\n    }),\n    dispatch => ({})\n)(App);\n"]},"metadata":{},"sourceType":"module"}