{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/react/redux-app/src/components/TodoList/TodoList.js\";\nimport tick from '../../img/green-tick.png';\nimport close from \"../../img/close.svg\";\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoBtn = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => props.onclick,\n    id: props.todo.complete ? 'unhidden' : 'hidden',\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todoBlock__solve\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.img,\n        width: \"30px\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoBtn;\n\nconst TodoList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.todo.complete ? 'completed' : 'uncompleted',\n      style: {\n        wordBreak: 'break-word',\n        width: '280px',\n        textAlign: 'start',\n        fontFamily: 'Courier, serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => props.handle.handleTodo(props.todo.id),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: props.todo.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list__todoBlock\",\n      children: [/*#__PURE__*/_jsxDEV(TodoBtn, {\n        img: tick,\n        todo: props.todo,\n        onclick: () => props.handle.handleSolve(props.todo.id, props.todo.label)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoBtn, {\n        img: close,\n        todo: props.todo,\n        onclick: () => props.handle.handleClose(props.todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = TodoList;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoBtn\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["/Users/macuser/Documents/react/redux-app/src/components/TodoList/TodoList.js"],"names":["tick","TodoBtn","props","onclick","todo","complete","img","TodoList","wordBreak","width","textAlign","fontFamily","handle","handleTodo","id","cursor","label","handleSolve","close","handleClose"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBACI;AAAK,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,OAA1B;AAAmC,IAAA,EAAE,EAAED,KAAK,CAACE,IAAN,CAAWC,QAAX,GAAsB,UAAtB,GAAmC,QAA1E;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEH,KAAK,CAACI,GAAhB;AAAqB,QAAA,KAAK,EAAE,MAA5B;AAAoC,QAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;KAAML,O;;AAUN,MAAMM,QAAQ,GAAIL,KAAD,IAAW;AAExB,sBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEA,KAAK,CAACE,IAAN,CAAWC,QAAX,GAAsB,WAAtB,GAAoC,aAApD;AACK,MAAA,KAAK,EAAE;AACHG,QAAAA,SAAS,EAAE,YADR;AAEHC,QAAAA,KAAK,EAAE,OAFJ;AAGHC,QAAAA,SAAS,EAAE,OAHR;AAIHC,QAAAA,UAAU,EAAE;AAJT,OADZ;AAAA,6BAQI;AAAM,QAAA,OAAO,EAAE,MAAMT,KAAK,CAACU,MAAN,CAAaC,UAAb,CAAwBX,KAAK,CAACE,IAAN,CAAWU,EAAnC,CAArB;AAA8D,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAArE;AAAA,kBAA4Fb,KAAK,CAACE,IAAN,CAAWY;AAAvG;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,GAAG,EAAEhB,IAAd;AAAoB,QAAA,IAAI,EAAEE,KAAK,CAACE,IAAhC;AAAsC,QAAA,OAAO,EAAE,MAAMF,KAAK,CAACU,MAAN,CAAaK,WAAb,CAAyBf,KAAK,CAACE,IAAN,CAAWU,EAApC,EAAwCZ,KAAK,CAACE,IAAN,CAAWY,KAAnD;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,GAAG,EAAEE,KAAd;AAAqB,QAAA,IAAI,EAAEhB,KAAK,CAACE,IAAjC;AAAuC,QAAA,OAAO,EAAE,MAAMF,KAAK,CAACU,MAAN,CAAaO,WAAb,CAAyBjB,KAAK,CAACE,IAAN,CAAWU,EAApC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAjCD;;MAAMP,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import tick from '../../img/green-tick.png'\nimport close from '../../img/close.svg'\nimport './TodoList.css'\n\nconst TodoBtn = (props) => {\n    return (\n        <div onClick={() => props.onclick} id={props.todo.complete ? 'unhidden' : 'hidden'}>\n            <button className=\"todoBlock__solve\">\n                <img src={props.img} width={\"30px\"} alt=\"\"/>\n            </button>\n        </div>\n    )\n}\n\nconst TodoList = (props) => {\n\n    return (\n        <div  className=\"task-list__block\">\n            <div className={props.todo.complete ? 'completed' : 'uncompleted'}\n                 style={{\n                     wordBreak: 'break-word',\n                     width: '280px',\n                     textAlign: 'start',\n                     fontFamily: 'Courier, serif',\n\n                 }}>\n                <span onClick={() => props.handle.handleTodo(props.todo.id)}  style={{cursor: \"pointer\"}}>{ props.todo.label}</span>\n            </div>\n\n            <div className=\"task-list__todoBlock\">\n                <TodoBtn img={tick} todo={props.todo} onclick={() => props.handle.handleSolve(props.todo.id, props.todo.label)} />\n                <TodoBtn img={close} todo={props.todo} onclick={() => props.handle.handleClose(props.todo.id)} />\n                {/*<div onClick={() => props.handle.handleSolve(props.todo.id, props.todo.label)} id={props.todo.complete ? 'unhidden' : 'hidden'}>*/}\n                {/*    <button className=\"todoBlock__solve\">*/}\n                {/*        <img src={tick} width={\"30px\"} alt=\"\"/>*/}\n                {/*    </button>*/}\n                {/*</div>*/}\n\n                {/*<div onClick={() => props.handle.handleClose(props.todo.id)}>*/}\n                {/*    <button className=\"todoBlock__close\">*/}\n                {/*        <img src={close} alt=\"\"/>*/}\n                {/*    </button>*/}\n                {/*</div>*/}\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}